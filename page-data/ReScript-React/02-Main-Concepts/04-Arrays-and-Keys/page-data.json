{"componentChunkName":"component---src-templates-docs-js","path":"/ReScript-React/02-Main-Concepts/04-Arrays-and-Keys","result":{"data":{"site":{"siteMetadata":{"title":"ReScript in Korean","docsLocation":"https://github.com/green-labs/rescript-in-korean/tree/main/content"}},"mdx":{"fields":{"id":"bae37fb0-ed00-582e-beb0-08275a66e536","title":"배열과 키","slug":"/ReScript-React/02-Main-Concepts/04-Arrays-and-Keys"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"배열과 키\",\n  \"metaTitle\": \"04-배열과 키(Arrays and Keys)\",\n  \"metaDescription\": \"리스크립트와 리액트에서 배열 렌더링과 키를 핸들링하기\",\n  \"canonical\": \"https://rescript-lang.org/docs/react/latest/arrays-and-keys\",\n  \"sourceUrl\": \"https://rescript-lang.org/docs/react/latest/arrays-and-keys\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\uB370\\uC774\\uD130\\uB97C \\uC5D8\\uB9AC\\uBA3C\\uD2B8 \\uBC30\\uC5F4\\uB85C \\uBCC0\\uD658\\uD558\\uACE0 \\uC774\\uB97C \\uB9AC\\uC561\\uD2B8 \\uD2B8\\uB9AC\\uC5D0 \\uB123\\uC744\\uB54C\\uB9C8\\uB2E4 \\uB9AC\\uC561\\uD2B8\\uAC00 \\uB80C\\uB354\\uB9C1\\uC5D0 \\uB300\\uD574 \\uAC01 \\uC5D8\\uB9AC\\uBA3C\\uD2B8\\uB9C8\\uB2E4 \\uAD6C\\uBCC4\\uD560 \\uC218 \\uC788\\uB3C4\\uB85D \\uACE0\\uC720\\uD55C \\uC2DD\\uBCC4\\uC790\\uB97C \\uB123\\uC5B4\\uC57C\\uD569\\uB2C8\\uB2E4. \\uC774 \\uD398\\uC774\\uC9C0\\uC5D0\\uC11C\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"key\"), \"\\uC18D\\uC131\\uACFC \\uB370\\uC774\\uD130\\uB97C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"React.element\"), \" \\uD0C0\\uC785\\uC5D0 \\uB9E4\\uD551\\uD560 \\uB54C\\uB9C8\\uB2E4 \\uC801\\uC6A9\\uD558\\uB294 \\uBC29\\uBC95\\uC744 \\uC124\\uBA85\\uD569\\uB2C8\\uB2E4.\"), mdx(\"h2\", null, \"\\uD0A4 \\uADF8\\uB9AC\\uACE0 \\uBC30\\uC5F4 \\uB80C\\uB354\\uB9C1\\uD558\\uAE30\"), mdx(\"p\", null, \"\\uD0A4\\uB294 \\uB9AC\\uC561\\uD2B8\\uAC00 \\uAC01 \\uB80C\\uB354\\uB9C1 \\uACFC\\uC815\\uC5D0\\uC11C \\uBCC0\\uACBD, \\uCD94\\uAC00 \\uB610\\uB294 \\uC81C\\uAC70 \\uB41C \\uC5D8\\uB9AC\\uBA3C\\uD2B8\\uB97C \\uC2DD\\uBCC4\\uD558\\uB294 \\uB370 \\uB3C4\\uC6C0\\uC774 \\uB429\\uB2C8\\uB2E4. \\uC5D8\\uB9AC\\uBA3C\\uD2B8\\uC5D0 \\uC548\\uC815\\uC801\\uC778 ID\\uB97C \\uC81C\\uACF5\\uD558\\uB824\\uBA74 \\uBC30\\uC5F4 \\uB0B4\\uBD80 \\uC5D8\\uB9AC\\uBA3C\\uD2B8\\uC5D0 \\uD0A4\\uB97C \\uC8FC\\uC785\\uD574\\uC57C\\uD569\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-reason\"\n  }, \"let numbers = [1, 2, 3, 4, 5];\\n\\nlet items = Belt.Array.map(numbers, (number) => {\\n  <li key={Belt.Int.toString(number)}> {React.int(number)} </li>\\n})\\n\")), mdx(\"p\", null, \"\\uD0A4 \\uAC12\\uC73C\\uB85C \\uAC00\\uC7A5 \\uC88B\\uC740 \\uAC83\\uC740 \\uD615\\uC81C(siblings) \\uC694\\uC18C \\uC911\\uC5D0\\uC11C \\uAC01\\uAC01 \\uACE0\\uC720\\uD558\\uAC8C \\uC2DD\\uBCC4\\uD560 \\uC218 \\uC788\\uB294 \\uBB38\\uC790\\uC5F4\\uC744 \\uC0AC\\uC6A9\\uD558\\uB294 \\uAC83\\uC785\\uB2C8\\uB2E4. \\uB300\\uBD80\\uBD84\\uC758 \\uACBD\\uC6B0 \\uB370\\uC774\\uD130\\uC758 ID\\uB97C \\uD0A4\\uB85C \\uC0AC\\uC6A9\\uD569\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-reason\"\n  }, \"type todo = {id: string, text: string}\\n\\nlet todos = [\\n  {id: \\\"todo1\\\", text: \\\"Todo 1\\\"},\\n  {id: \\\"todo2\\\", text: \\\"Todo 2\\\"}\\n]\\n\\nlet items = Belt.Array.map(todos, todo => {\\n  <li key={todo.id}> {React.string(todo.text)} </li>\\n})\\n\")), mdx(\"p\", null, \"\\uB9CC\\uC77C \\uB80C\\uB354\\uB9C1 \\uC694\\uC18C\\uC5D0 \\uC548\\uC815\\uC801\\uC778 ID\\uAC00 \\uC5C6\\uB2E4\\uBA74 \\uB9C8\\uC9C0\\uB9C9 \\uC218\\uB2E8\\uC73C\\uB85C index \\uAC12\\uC744 \\uD0A4\\uB85C \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-reason\",\n    \"metastring\": \"{2,3}\",\n    \"{2,3}\": true\n  }, \"let items = Belt.Array.mapWithIndex(todos, (todo, i) => {\\n  /* \\uC548\\uC815\\uC801\\uC778 ID \\uAC12\\uC774 \\uC5C6\\uC744 \\uB54C\\uB9CC Index\\uB97C \\uC0AC\\uC6A9\\uD558\\uC138\\uC694 */\\n  <li key={i}>\\n    {todo.text}\\n  </li>\\n});\\n\")), mdx(\"h3\", null, \"\\uD0A4 \\uAC12\\uC740 \\uD615\\uC81C \\uC694\\uC18C\\uB4E4 \\uC0AC\\uC774\\uC5D0\\uC11C \\uAC01\\uAC01 \\uACE0\\uC720\\uD574\\uC57C\\uD569\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uBC30\\uC5F4 \\uB0B4\\uC5D0\\uC11C \\uC0AC\\uC6A9\\uB418\\uB294 \\uD0A4\\uB294 \\uD615\\uC81C \\uC694\\uC18C \\uC0AC\\uC774\\uC5D0\\uC11C \\uACE0\\uC720\\uD574\\uC57C\\uD569\\uB2C8\\uB2E4. \\uD558\\uC9C0\\uB9CC \\uAE00\\uB85C\\uBC8C\\uD55C \\uC601\\uC5ED\\uC5D0\\uC11C \\uACE0\\uC720\\uD560 \\uD544\\uC694\\uB294 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uB450 \\uAC1C\\uC758 \\uB2E4\\uB978 \\uBC30\\uC5F4\\uC744 \\uC0DD\\uC131\\uD560 \\uB54C \\uACE0\\uC720\\uD55C \\uD0A4\\uB97C \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-reason\",\n    \"metastring\": \"{6,10,17,18,25,27}\",\n    \"{6,10,17,18,25,27}\": true\n  }, \"type post = {id: string, title: string, content: string}\\n\\nmodule Blog = {\\n  @react.component\\n  let make = (~posts: array<post>) => {\\n    let sidebar =\\n      <ul>\\n        {\\n          Belt.Array.map(posts, (post) => {\\n            <li key={post.id}>\\n              {React.string(post.title)}\\n            </li>\\n          })->React.array\\n        }\\n      </ul>\\n\\n    let content = Belt.Array.map(posts, (post) => {\\n        <div key={post.id}>\\n          <h3>{React.string(post.title)}</h3>\\n          <p>{React.string(post.content)}</p>\\n        </div>\\n    });\\n\\n      <div>\\n      {sidebar}\\n      <hr />\\n      {React.array(content)}\\n    </div>\\n  }\\n}\\n\\nlet posts = [\\n  {id: \\\"1\\\", title: \\\"Hello World\\\", content: \\\"Welcome to learning ReScript & React!\\\"},\\n  {id: \\\"2\\\", title: \\\"Installation\\\", content: \\\"You can install reason-react from npm.\\\"}\\n]\\n\\nlet blog = <Blog posts/>\\n\")), mdx(\"h2\", null, \"\\uB9AC\\uC2A4\\uD2B8 \\uB80C\\uB354\\uB9C1\\uD558\\uAE30\"), mdx(\"p\", null, \"\\uC544\\uC774\\uD15C\\uC758 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"list\"), \"\\uB97C \\uB80C\\uB354\\uB9C1\\uD558\\uAE30 \\uC6D0\\uD558\\uC2DC\\uBA74 \\uC774\\uB7F0 \\uC2DD\\uC73C\\uB85C \\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-reason\"\n  }, \"type todo = {id: string, text: string}\\nlet todoList = list{\\n  {id: \\\"todo1\\\", text: \\\"Todo 1\\\"},\\n  {id: \\\"todo2\\\", text: \\\"Todo 2\\\"}\\n}\\n\\nlet items =\\n  todoList\\n  ->Belt.List.toArray\\n  ->Belt.List.map((todo) => {\\n  <li key={todo.id}>\\n    {React.string(todo.text)}\\n  </li>\\n})\\n\\n<div> {React.array(items)} </div>\\n\")), mdx(\"p\", null, \"\\uC6B0\\uB9AC\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"array<React.element>\"), \"\\uB97C \\uC0DD\\uC131\\uD558\\uAE30 \\uC804\\uC5D0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Belt.List.toArray\"), \"\\uB97C \\uC774\\uC6A9\\uD574 list\\uB97C array\\uB85C \\uBCC0\\uD658\\uD574\\uC57C\\uD569\\uB2C8\\uB2E4. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"list\"), \"\\uB97C \\uC0AC\\uC6A9\\uD558\\uBA74 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"array\"), \"\\uB85C\\uC758 \\uCD94\\uAC00\\uC801 \\uBCC0\\uD658 \\uBE44\\uC6A9\\uC774 \\uBC1C\\uC0DD\\uD569\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uC544\\uB9C8 99%\\uC758 \\uACBD\\uC6B0\\uC5D0 \\uBC30\\uC5F4\\uC744(\\uC6D0\\uD65C\\uD55C \\uC778\\uD130\\uB86D, \\uBE60\\uB978 \\uC790\\uBC14\\uC2A4\\uD06C\\uB9BD\\uD2B8 \\uCF54\\uB4DC) \\uC0AC\\uC6A9\\uD560\\uAC83\\uC785\\uB2C8\\uB2E4. \\uD558\\uC9C0\\uB9CC \\uACBD\\uC6B0\\uC5D0 \\uB530\\uB77C \\uACE0\\uAE09 \\uD328\\uD134 \\uB9E4\\uCE6D \\uAE30\\uB2A5\\uC744 \\uC0AC\\uC6A9\\uD558\\uACE0 \\uC2F6\\uC744 \\uB54C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"list\"), \" \\uD0C0\\uC785\\uC744 \\uC0AC\\uC6A9\\uD558\\uAE30\\uB3C4 \\uD569\\uB2C8\\uB2E4.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#키-그리고-배열-렌더링하기","title":"키 그리고 배열 렌더링하기","items":[{"url":"#키-값은-형제-요소들-사이에서-각각-고유해야합니다","title":"키 값은 형제 요소들 사이에서 각각 고유해야합니다."}]},{"url":"#리스트-렌더링하기","title":"리스트 렌더링하기"}]},"parent":{"relativePath":"ReScript-React/02-Main-Concepts/04-Arrays-and-Keys.mdx"},"frontmatter":{"metaTitle":"04-배열과 키(Arrays and Keys)","metaDescription":"리스크립트와 리액트에서 배열 렌더링과 키를 핸들링하기","sourceUrl":"https://rescript-lang.org/docs/react/latest/arrays-and-keys","canonical":"https://rescript-lang.org/docs/react/latest/arrays-and-keys"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/Build-System","title":"빌드 시스템"}}},{"node":{"fields":{"slug":"/Extra","title":"그 외"}}},{"node":{"fields":{"slug":"/Guides","title":"가이드"}}},{"node":{"fields":{"slug":"/JavaScript-Interop","title":"자바스크립트 인터롭"}}},{"node":{"fields":{"slug":"/Language-Features","title":"언어적인 특징"}}},{"node":{"fields":{"slug":"/Overview","title":"개요"}}},{"node":{"fields":{"slug":"/ReScript-React","title":"ReScript React"}}},{"node":{"fields":{"slug":"/","title":"ReScript in Korean"}}},{"node":{"fields":{"slug":"/Build-System/01-Overview","title":"개요"}}},{"node":{"fields":{"slug":"/Build-System/02-Configuration","title":"설정"}}},{"node":{"fields":{"slug":"/Build-System/03-Configuration-Schema","title":"설정 스키마"}}},{"node":{"fields":{"slug":"/Build-System/04-External-Stdlib","title":"External Stdlib"}}},{"node":{"fields":{"slug":"/Build-System/05-Build-Pinned-Dependencies","title":"고정 의존성"}}},{"node":{"fields":{"slug":"/Build-System/06-Interop-with-JS-Build-Systems","title":"자바스크립트 빌드시스템 인터롭"}}},{"node":{"fields":{"slug":"/Build-System/07-Performance","title":"성능"}}},{"node":{"fields":{"slug":"/Extra/01-Newcomer-Examples","title":"초보자를 위한 예제"}}},{"node":{"fields":{"slug":"/Extra/02-Project-Structure","title":"Project Structure"}}},{"node":{"fields":{"slug":"/Extra/03-FAQ","title":"자주 묻는 질문"}}},{"node":{"fields":{"slug":"/Guides/01-Converting-from-JS","title":"자바스크립트 파일을 변환하기"}}},{"node":{"fields":{"slug":"/Guides/02-Libraries","title":"Libraries"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/01-Embed-Raw-JavaScript","title":"Embed Raw JavaScript"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/05-Bind-to-JS-Function","title":"자바스크립트 함수에 바인딩하기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/06-Import-from-Export-to-JS","title":"Import from / Export to JS"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/07-Bind-to-Global-JS-Values","title":"Bind to Global JS Values"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/08-JSON","title":"JSON"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/09-Inlining-Constants","title":"변수 인라인하기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/10-Use-Illegal-Identifier-Names","title":"Use Illegal Identifier Names"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers","title":"인터롭 코드 자동 생성하기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/12-Browser-Support-Polyfills","title":"Browser Support & Polyfills"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/13-Interop-Cheatsheet","title":"Interop Cheatsheet"}}},{"node":{"fields":{"slug":"/Language-Features/01-Overview","title":"개요"}}},{"node":{"fields":{"slug":"/Language-Features/02-Let-Binding","title":"Let 바인딩"}}},{"node":{"fields":{"slug":"/Language-Features/03-Type","title":"타입"}}},{"node":{"fields":{"slug":"/Language-Features/04-Primitive-Types","title":"원시 타입"}}},{"node":{"fields":{"slug":"/Language-Features/05-Tuple","title":"튜플"}}},{"node":{"fields":{"slug":"/Language-Features/06-Record","title":"레코드"}}},{"node":{"fields":{"slug":"/Language-Features/07-Object","title":"객체"}}},{"node":{"fields":{"slug":"/Language-Features/08-Variant","title":"배리언트"}}},{"node":{"fields":{"slug":"/Language-Features/09-Polymorphic-Variant","title":"Polymorphic Variant"}}},{"node":{"fields":{"slug":"/Language-Features/10-Null-Undefined-and-Option","title":"Null, Undefined 그리고 Option"}}},{"node":{"fields":{"slug":"/Language-Features/11-Array-List","title":"배열과 리스트"}}},{"node":{"fields":{"slug":"/Language-Features/12-Function","title":"함수"}}},{"node":{"fields":{"slug":"/Language-Features/13-Control-Flow","title":"제어 흐름"}}},{"node":{"fields":{"slug":"/Language-Features/14-Pipe","title":"파이프"}}},{"node":{"fields":{"slug":"/Language-Features/15-Pattern-Matching-Destructuring","title":"패턴 매칭 / 구조분해"}}},{"node":{"fields":{"slug":"/Language-Features/16-Mutation","title":"가변"}}},{"node":{"fields":{"slug":"/Language-Features/17-JSX","title":"JSX"}}},{"node":{"fields":{"slug":"/Language-Features/18-Exception","title":"예외"}}},{"node":{"fields":{"slug":"/Language-Features/19-Lazy-Value","title":"Lazy Value"}}},{"node":{"fields":{"slug":"/Language-Features/20-Async-Promise","title":"Async & Promise"}}},{"node":{"fields":{"slug":"/Language-Features/21-Module","title":"모듈"}}},{"node":{"fields":{"slug":"/Language-Features/22-Import-Export","title":"Import & Export"}}},{"node":{"fields":{"slug":"/Language-Features/23-Attribute-Decorator","title":"속성 (데코레이터)"}}},{"node":{"fields":{"slug":"/Language-Features/24-Unboxed","title":"언박싱"}}},{"node":{"fields":{"slug":"/Language-Features/25-Reserved-Keyword","title":"예약된 키워드"}}},{"node":{"fields":{"slug":"/Overview/01-Introduction","title":"소개"}}},{"node":{"fields":{"slug":"/Overview/02-Installation","title":"설치"}}},{"node":{"fields":{"slug":"/Overview/03-EditorPlugins","title":"편집기 플러그인"}}},{"node":{"fields":{"slug":"/Overview/04-Migrate-to-ReScript-Syntax","title":"리스크립트 문법으로 변경하기"}}},{"node":{"fields":{"slug":"/Overview/05-Try","title":"CLI로 직접 해보기"}}},{"node":{"fields":{"slug":"/ReScript-React/01-Overview","title":"개요"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts","title":"메인 컨셉"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management","title":"리액트 훅과 상태 관리"}}},{"node":{"fields":{"slug":"/ReScript-React/04-Guides","title":"가이드"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/04-Bind-to-JS-Object","title":"자바스크립트 객체에 바인딩하기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/03-External-Bind-to-Any-JS-Library","title":"External (자바스크립트 라이브러리 바인딩)"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/02-Shared-Data-Types","title":"데이터 타입 공유"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers/01-@deriving(accessors)","title":"@deriving(accessor)"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers/02-@deriving(jsConverter)","title":"@deriving(jsConverter)"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers/03-@deriving(abstract)","title":"@deriving(abstract)"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers/04-@obj","title":"@obj"}}},{"node":{"fields":{"slug":"/ReScript-React/01-Overview/01-Introduction","title":"소개"}}},{"node":{"fields":{"slug":"/ReScript-React/01-Overview/02-Installation","title":"설치"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/01-Elements-and-JSX","title":"엘리먼트와 JSX"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/02-Rendering-Elements","title":"엘리먼트 렌더링하기"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/03-Components-and-Props","title":"컴포넌트와 Props"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/04-Arrays-and-Keys","title":"배열과 키"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/05-Refs-and-the-DOM","title":"Refs와 DOM"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/06-Context","title":"컨텍스트"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/08-Router","title":"라우터"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/01-Hooks-and-State-Management-Overview","title":"리액트 훅과 상태 관리 개요"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/02-useEffect","title":"useEffect"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/03-useState","title":"useState"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/04-useReducer","title":"useReducer"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/05-useContext","title":"useContext"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/06-useRef","title":"useRef"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/07-Build-A-Custom-Hook","title":"커스텀 훅 만들기"}}},{"node":{"fields":{"slug":"/ReScript-React/04-Guides/01-Beyond-JSX","title":"JSX를 넘어서"}}},{"node":{"fields":{"slug":"/ReScript-React/04-Guides/02-Forwarding-Refs","title":"Ref 포워딩하기"}}}]}},"pageContext":{"id":"bae37fb0-ed00-582e-beb0-08275a66e536"}},"staticQueryHashes":["2619113677","3706406642","417421954"]}