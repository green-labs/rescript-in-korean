{"componentChunkName":"component---src-templates-docs-js","path":"/ReScript-React/02-Main-Concepts/06-Context","result":{"data":{"site":{"siteMetadata":{"title":"ReScript in Korean","docsLocation":"https://github.com/green-labs/rescript-in-korean/tree/main/content"}},"mdx":{"fields":{"id":"c81d3d0b-2c4a-5642-b77e-8585b1775ff9","title":"컨텍스트","slug":"/ReScript-React/02-Main-Concepts/06-Context"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"컨텍스트\",\n  \"metaTitle\": \"06-컨텍스트(Context)\",\n  \"metaDescription\": \"리스크립트와 리액트에서 컨텍스트에 대해 자세히 다뤄봅니다\",\n  \"canonical\": \"https://rescript-lang.org/docs/react/latest/context\",\n  \"sourceUrl\": \"https://rescript-lang.org/docs/react/latest/context\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\uCEE8\\uD14D\\uC2A4\\uD2B8\\uB294 \\uB808\\uBCA8\\uC5D0\\uC11C \\uC218\\uB3D9\\uC73C\\uB85C Props \\uB97C \\uC804\\uB2EC\\uD558\\uC9C0 \\uC54A\\uACE0 \\uCEF4\\uD3EC\\uB10C\\uD2B8 \\uD2B8\\uB9AC\\uB97C \\uD1B5\\uD574 \\uB370\\uC774\\uD130\\uB97C \\uC804\\uB2EC\\uD560 \\uC218 \\uC788\\uB294 \\uBC29\\uBC95\\uC744 \\uC81C\\uACF5\\uD569\\uB2C8\\uB2E4.\"), mdx(\"h2\", null, \"\\uC65C \\uCEE8\\uD14D\\uC2A4\\uD2B8\\uB97C \\uC4F0\\uB098\\uC694?\"), mdx(\"p\", null, \"\\uBCF4\\uD3B8\\uC801\\uC778 \\uB9AC\\uC561\\uD2B8 \\uC560\\uD50C\\uB9AC\\uCF00\\uC774\\uC158\\uC5D0\\uC11C, \\uB370\\uC774\\uD130\\uB294 Props\\uB97C \\uD1B5\\uD574 \\uD0D1-\\uB2E4\\uC6B4(\\uBD80\\uBAA8\\uC5D0\\uC11C \\uC790\\uC2DD\\uC73C\\uB85C) \\uD615\\uC2DD\\uC73C\\uB85C \\uC804\\uB2EC\\uB429\\uB2C8\\uB2E4. \\uADF8\\uB7EC\\uB098 \\uC774 \\uBC29\\uC2DD\\uC740 \\uB85C\\uCF00\\uC77C \\uC124\\uC815\\uC774\\uB098 UI \\uD14C\\uB9C8 \\uB4F1, \\uC560\\uD50C\\uB9AC\\uCF00\\uC774\\uC158\\uC758 \\uB9CE\\uC740 \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uC5D0 \\uC804\\uB2EC\\uD574\\uC57C\\uD558\\uB294 Props\\uC77C \\uB54C \\uBC88\\uAC70\\uB85C\\uC6B8 \\uC218 \\uC788\\uB294 \\uBC29\\uBC95\\uC785\\uB2C8\\uB2E4. \\uCEE8\\uD14D\\uC2A4\\uD2B8\\uB294 \\uD2B8\\uB9AC\\uC758 \\uBAA8\\uB4E0 \\uB808\\uBCA8\\uC744 \\uD1B5\\uD574 \\uBA85\\uC2DC\\uC801\\uC73C\\uB85C Props\\uB97C \\uC804\\uB2EC\\uD560 \\uD544\\uC694\\uC5C6\\uC774 \\uCEF4\\uD3EC\\uB10C\\uD2B8 \\uAC04\\uC5D0 \\uC11C\\uB85C \\uAC19\\uC740 \\uAC12\\uC744 \\uACF5\\uC720\\uD558\\uB294 \\uBC29\\uBC95\\uC744 \\uC81C\\uACF5\\uD569\\uB2C8\\uB2E4.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\uCC38\\uACE0\"), \" \\uB9AC\\uC2A4\\uD06C\\uB9BD\\uD2B8\\uC5D0\\uC11C, Props\\uB97C \\uB0B4\\uB824\\uC8FC\\uB294 \\uAC83\\uC740 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rescript-in-korean/docs/manual/latest/jsx#punning\"\n  }, \"JSX prop punning\"), \" \\uAE30\\uB2A5\\uACFC \\uAC15\\uB825\\uD55C \\uD0C0\\uC785 \\uCD94\\uB860\\uC744 \\uBC14\\uD0D5\\uC73C\\uB85C \\uD0C0\\uC785\\uC2A4\\uD06C\\uB9BD\\uD2B8 / \\uC790\\uBC14\\uC2A4\\uD06C\\uB9BD\\uD2B8\\uBCF4\\uB2E4 \\uD6E8\\uC52C \\uAC04\\uB2E8\\uD558\\uBBC0\\uB85C \\uB2E8\\uC21C\\uD558\\uAC8C Props \\uB4DC\\uB9B4\\uB9C1\\uC774 \\uC120\\uD638\\uB418\\uB294 \\uACBD\\uC6B0\\uAC00 \\uB354 \\uB9CE\\uC2B5\\uB2C8\\uB2E4. \\uAF3C\\uC218\\uBCF4\\uB2E4\\uB294 \\uD22C\\uBA85\\uD55C \\uAC83\\uC774 \\uC88B\\uC8E0!(\\uC6D0\\uBB38: Less magic means more transparency!)\"), mdx(\"h2\", null, \"\\uC5B8\\uC81C \\uCEE8\\uD14D\\uC2A4\\uD2B8\\uB97C \\uC501\\uB2C8\\uAE4C?\"), mdx(\"p\", null, \"\\uCEE8\\uD14D\\uC2A4\\uD2B8\\uB294 \\uC0AC\\uC6A9\\uC790 \\uC778\\uC99D \\uC815\\uBCF4, UI \\uD14C\\uB9C8, \\uB610\\uB294 \\uB85C\\uCF00\\uC77C \\uC124\\uC815 \\uB4F1 \\uB9AC\\uC561\\uD2B8 \\uCEF4\\uD3EC\\uB10C\\uD2B8 \\uD2B8\\uB9AC\\uC5D0 \\uB300\\uD574 \\u201C\\uC804\\uC5ED\\u201D\\uC801\\uC73C\\uB85C \\uC801\\uC6A9\\uB420 \\uC218 \\uC788\\uB294 \\uB370\\uC774\\uD130\\uB97C \\uACF5\\uC720\\uD558\\uB3C4\\uB85D \\uC124\\uAC8C\\uB410\\uC2B5\\uB2C8\\uB2E4. \\uC608\\uB97C \\uB4E4\\uC5B4 \\uC544\\uB798 \\uCF54\\uB4DC\\uC5D0\\uC11C Button \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uC758 \\uC2A4\\uD0C0\\uC77C\\uC744 \\uC9C0\\uC815\\uD558\\uAE30 \\uC704\\uD574 \\u201Ctheme\\u201D Props\\uB97C \\uC218\\uB3D9\\uC73C\\uB85C \\uC0DD\\uC131\\uD574 \\uB0B4\\uB824\\uC90D\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-reason\"\n  }, \"/* src/App.res */\\ntype theme = Light | Dark;\\n\\nmodule Button = {\\n  @react.component\\n  let make = (~theme) => {\\n    let className = switch theme {\\n      | Light => \\\"theme-light\\\"\\n      | Dark => \\\"theme-black\\\"\\n    };\\n    <button className> {React.string(\\\"Click me\\\")} </button>\\n  }\\n}\\n\\nmodule ThemedButton = {\\n  @react.component\\n  let make = (~theme) => {\\n    <Button theme />\\n  }\\n}\\n\\nmodule Toolbar = {\\n  @react.component\\n  let make = (~theme) => {\\n    <div>\\n      <ThemedButton theme/>\\n    </div>\\n  }\\n}\\n\\n@react.component\\nlet make = () => {\\n  /* \\uAC00\\uC7A5 \\uC0C1\\uC704 \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uC5D0\\uC11C \\uD14C\\uB9C8\\uB97C \\uC815\\uC758\\uD574 \\uC790\\uC2DD \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB85C \\uB0B4\\uB824\\uC90D\\uB2C8\\uB2E4 */\\n  <Toolbar theme=Dark/>\\n}\\n\")), mdx(\"p\", null, \"\\uCEE8\\uD14D\\uC2A4\\uD2B8\\uB97C \\uC0AC\\uC6A9\\uD558\\uBA74 \\uC911\\uAC04 \\uB2E8\\uACC4\\uB97C \\uAC70\\uCE58\\uBA70 Props\\uB97C \\uB0B4\\uB824\\uC8FC\\uB294 \\uAC83\\uC744 \\uD53C\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-reason\"\n  }, \"/* src/App.res */\\n\\nmodule ThemeContext = {\\n  type theme = Light | Dark;\\n  let context = React.createContext(Light)\\n\\n  module Provider = {\\n    let provider = React.Context.provider(context)\\n\\n    @react.component\\n    let make = (~value, ~children) => {\\n      React.createElement(provider, {\\\"value\\\": value, \\\"children\\\": children})\\n    }\\n  }\\n}\\n\\nmodule Button = {\\n  @react.component\\n  let make = (~theme) => {\\n    let className = switch theme {\\n      | ThemeContext.Light => \\\"theme-light\\\"\\n      | Dark => \\\"theme-black\\\"\\n    };\\n    <button className> {React.string(\\\"Click me\\\")} </button>\\n  }\\n}\\n\\nmodule ThemedButton = {\\n  @react.component\\n  let make = () => {\\n    let theme = React.useContext(ThemeContext.context)\\n\\n    <Button theme/>\\n  }\\n}\\n\\nmodule Toolbar = {\\n  @react.component\\n  let make = () => {\\n    <div> <ThemedButton /> </div>\\n  }\\n}\\n\\n@react.component\\nlet make = () => {\\n  <ThemeContext.Provider value=ThemeContext.Dark>\\n    <div> <Toolbar /> </div>\\n  </ThemeContext.Provider>\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#왜-컨텍스트를-쓰나요","title":"왜 컨텍스트를 쓰나요?"},{"url":"#언제-컨텍스트를-씁니까","title":"언제 컨텍스트를 씁니까?"}]},"parent":{"relativePath":"ReScript-React/02-Main-Concepts/06-Context.mdx"},"frontmatter":{"metaTitle":"06-컨텍스트(Context)","metaDescription":"리스크립트와 리액트에서 컨텍스트에 대해 자세히 다뤄봅니다","sourceUrl":"https://rescript-lang.org/docs/react/latest/context","canonical":"https://rescript-lang.org/docs/react/latest/context"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/Build-System","title":"빌드 시스템"}}},{"node":{"fields":{"slug":"/Extra","title":"그 외"}}},{"node":{"fields":{"slug":"/Guides","title":"가이드"}}},{"node":{"fields":{"slug":"/JavaScript-Interop","title":"자바스크립트 인터롭"}}},{"node":{"fields":{"slug":"/Language-Features","title":"언어적인 특징"}}},{"node":{"fields":{"slug":"/Overview","title":"개요"}}},{"node":{"fields":{"slug":"/ReScript-React","title":"ReScript React"}}},{"node":{"fields":{"slug":"/","title":"ReScript in Korean"}}},{"node":{"fields":{"slug":"/Build-System/01-Overview","title":"개요"}}},{"node":{"fields":{"slug":"/Build-System/02-Configuration","title":"설정"}}},{"node":{"fields":{"slug":"/Build-System/03-Configuration-Schema","title":"설정 스키마"}}},{"node":{"fields":{"slug":"/Build-System/04-External-Stdlib","title":"External Stdlib"}}},{"node":{"fields":{"slug":"/Build-System/05-Build-Pinned-Dependencies","title":"고정 의존성"}}},{"node":{"fields":{"slug":"/Build-System/06-Interop-with-JS-Build-Systems","title":"자바스크립트 빌드시스템 인터롭"}}},{"node":{"fields":{"slug":"/Build-System/07-Performance","title":"성능"}}},{"node":{"fields":{"slug":"/Extra/01-Newcomer-Examples","title":"초보자를 위한 예제"}}},{"node":{"fields":{"slug":"/Extra/02-Project-Structure","title":"Project Structure"}}},{"node":{"fields":{"slug":"/Extra/03-FAQ","title":"자주 묻는 질문"}}},{"node":{"fields":{"slug":"/Guides/01-Converting-from-JS","title":"자바스크립트 파일을 변환하기"}}},{"node":{"fields":{"slug":"/Guides/02-Libraries","title":"Libraries"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/01-Embed-Raw-JavaScript","title":"Embed Raw JavaScript"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/05-Bind-to-JS-Function","title":"자바스크립트 함수에 바인딩하기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/06-Import-from-Export-to-JS","title":"Import from / Export to JS"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/07-Bind-to-Global-JS-Values","title":"Bind to Global JS Values"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/08-JSON","title":"JSON"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/09-Inlining-Constants","title":"변수 인라인하기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/10-Use-Illegal-Identifier-Names","title":"Use Illegal Identifier Names"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers","title":"인터롭 코드 자동 생성하기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/12-Browser-Support-Polyfills","title":"Browser Support & Polyfills"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/13-Interop-Cheatsheet","title":"Interop Cheatsheet"}}},{"node":{"fields":{"slug":"/Language-Features/01-Overview","title":"개요"}}},{"node":{"fields":{"slug":"/Language-Features/02-Let-Binding","title":"Let 바인딩"}}},{"node":{"fields":{"slug":"/Language-Features/03-Type","title":"타입"}}},{"node":{"fields":{"slug":"/Language-Features/04-Primitive-Types","title":"원시 타입"}}},{"node":{"fields":{"slug":"/Language-Features/05-Tuple","title":"튜플"}}},{"node":{"fields":{"slug":"/Language-Features/06-Record","title":"레코드"}}},{"node":{"fields":{"slug":"/Language-Features/07-Object","title":"객체"}}},{"node":{"fields":{"slug":"/Language-Features/08-Variant","title":"배리언트"}}},{"node":{"fields":{"slug":"/Language-Features/09-Polymorphic-Variant","title":"Polymorphic Variant"}}},{"node":{"fields":{"slug":"/Language-Features/10-Null-Undefined-and-Option","title":"Null, Undefined 그리고 Option"}}},{"node":{"fields":{"slug":"/Language-Features/11-Array-List","title":"배열과 리스트"}}},{"node":{"fields":{"slug":"/Language-Features/12-Function","title":"함수"}}},{"node":{"fields":{"slug":"/Language-Features/13-Control-Flow","title":"제어 흐름"}}},{"node":{"fields":{"slug":"/Language-Features/14-Pipe","title":"파이프"}}},{"node":{"fields":{"slug":"/Language-Features/15-Pattern-Matching-Destructuring","title":"패턴 매칭 / 구조분해"}}},{"node":{"fields":{"slug":"/Language-Features/16-Mutation","title":"가변"}}},{"node":{"fields":{"slug":"/Language-Features/17-JSX","title":"JSX"}}},{"node":{"fields":{"slug":"/Language-Features/18-Exception","title":"예외"}}},{"node":{"fields":{"slug":"/Language-Features/19-Lazy-Value","title":"Lazy Value"}}},{"node":{"fields":{"slug":"/Language-Features/20-Async-Promise","title":"Async & Promise"}}},{"node":{"fields":{"slug":"/Language-Features/21-Module","title":"모듈"}}},{"node":{"fields":{"slug":"/Language-Features/22-Import-Export","title":"Import & Export"}}},{"node":{"fields":{"slug":"/Language-Features/23-Attribute-Decorator","title":"속성 (데코레이터)"}}},{"node":{"fields":{"slug":"/Language-Features/24-Unboxed","title":"언박싱"}}},{"node":{"fields":{"slug":"/Language-Features/25-Reserved-Keyword","title":"예약된 키워드"}}},{"node":{"fields":{"slug":"/Overview/01-Introduction","title":"소개"}}},{"node":{"fields":{"slug":"/Overview/02-Installation","title":"설치"}}},{"node":{"fields":{"slug":"/Overview/03-EditorPlugins","title":"편집기 플러그인"}}},{"node":{"fields":{"slug":"/Overview/04-Migrate-to-ReScript-Syntax","title":"리스크립트 문법으로 변경하기"}}},{"node":{"fields":{"slug":"/Overview/05-Try","title":"CLI로 직접 해보기"}}},{"node":{"fields":{"slug":"/ReScript-React/01-Overview","title":"개요"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts","title":"메인 컨셉"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management","title":"리액트 훅과 상태 관리"}}},{"node":{"fields":{"slug":"/ReScript-React/04-Guides","title":"가이드"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers/01-@deriving(accessors)","title":"@deriving(accessor)"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers/02-@deriving(jsConverter)","title":"@deriving(jsConverter)"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers/03-@deriving(abstract)","title":"@deriving(abstract)"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers/04-@obj","title":"@obj"}}},{"node":{"fields":{"slug":"/ReScript-React/01-Overview/01-Introduction","title":"소개"}}},{"node":{"fields":{"slug":"/ReScript-React/01-Overview/02-Installation","title":"설치"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/01-Elements-and-JSX","title":"엘리먼트와 JSX"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/02-Rendering-Elements","title":"엘리먼트 렌더링하기"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/03-Components-and-Props","title":"컴포넌트와 Props"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/04-Arrays-and-Keys","title":"배열과 키"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/05-Refs-and-the-DOM","title":"Refs와 DOM"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/06-Context","title":"컨텍스트"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/08-Router","title":"라우터"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/01-Hooks-and-State-Management-Overview","title":"리액트 훅과 상태 관리 개요"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/02-useEffect","title":"useEffect"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/03-useState","title":"useState"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/04-useReducer","title":"useReducer"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/05-useContext","title":"useContext"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/06-useRef","title":"useRef"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/07-Build-A-Custom-Hook","title":"커스텀 훅 만들기"}}},{"node":{"fields":{"slug":"/ReScript-React/04-Guides/01-Beyond-JSX","title":"JSX를 넘어서"}}},{"node":{"fields":{"slug":"/ReScript-React/04-Guides/02-Forwarding-Refs","title":"Ref 포워딩하기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/04-Bind-to-JS-Object","title":"자바스크립트 객체에 바인딩하기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/03-External-Bind-to-Any-JS-Library","title":"External (자바스크립트 라이브러리 바인딩)"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/02-Shared-Data-Types","title":"데이터 타입 공유"}}}]}},"pageContext":{"id":"c81d3d0b-2c4a-5642-b77e-8585b1775ff9"}},"staticQueryHashes":["2619113677","3706406642","417421954"]}