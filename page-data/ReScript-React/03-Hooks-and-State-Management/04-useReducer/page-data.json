{"componentChunkName":"component---src-templates-docs-js","path":"/ReScript-React/03-Hooks-and-State-Management/04-useReducer","result":{"data":{"site":{"siteMetadata":{"title":"ReScript in Korean","docsLocation":"https://github.com/green-labs/rescript-in-korean/tree/main/content"}},"mdx":{"fields":{"id":"7fc8d507-f8a1-5890-a048-3f5ac3c52800","title":"useReducer","slug":"/ReScript-React/03-Hooks-and-State-Management/04-useReducer"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"useReducer\",\n  \"metaTitle\": \"04-useReducer Hook\",\n  \"metaDescription\": \"리스크립트에서 useReducer 훅\",\n  \"canonical\": \"https://rescript-lang.org/docs/react/latest/hooks-reducer\",\n  \"sourceUrl\": \"https://rescript-lang.org/docs/react/latest/hooks-reducer\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"React.useReducer\"), \"\\uB294 \\uC561\\uC158/\\uB9AC\\uB4C0\\uC11C \\uD328\\uD134\\uC73C\\uB85C \\uC0C1\\uD0DC\\uB97C \\uD45C\\uD604\\uD558\\uB294\\uB370 \\uB3C4\\uC6C0\\uC744 \\uC90D\\uB2C8\\uB2E4.\"), mdx(\"h2\", null, \"\\uC0AC\\uC6A9\\uBC95\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-reason\"\n  }, \"let (state, dispatch) = React.useReducer(reducer, initialState)\\n\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"./hooks-state\"\n  }, \"useState\"), \"\\uC758 \\uB300\\uC548\\uC785\\uB2C8\\uB2E4. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"(state, action) => newState\"), \" \\uD0C0\\uC785\\uC758 \\uB9AC\\uB4C0\\uC11C\\uB97C \\uC778\\uC790\\uB85C \\uBC1B\\uACE0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"(action) => unit\"), \" \\uD0C0\\uC785\\uC778 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dispatch\"), \" \\uD568\\uC218\\uC640 \\uC30D\\uC744 \\uC774\\uB8E8\\uB294 \\uD604\\uC7AC \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"state\"), \"\\uB97C \\uBC18\\uD658\\uD569\\uB2C8\\uB2E4.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"React.useReducer\"), \"\\uB294 \\uC5EC\\uB7EC \\uD558\\uC704 \\uAC12\\uC744 \\uD3EC\\uD568\\uD558\\uB294 \\uBCF5\\uC7A1\\uD55C \\uC0C1\\uD0DC \\uAD00\\uB828 \\uB85C\\uC9C1\\uC774 \\uC788\\uAC70\\uB098 \\uB2E4\\uC74C \\uC0C1\\uD0DC\\uAC00 \\uC774\\uC804 \\uC0C1\\uD0DC\\uC5D0 \\uC758\\uC874\\uD558\\uB294 \\uACBD\\uC6B0 \\uC77C\\uBC18\\uC801\\uC73C\\uB85C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useState\"), \" \\uD6C5\\uBCF4\\uB2E4 \\uC120\\uD638\\uB429\\uB2C8\\uB2E4. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useReducer\"), \"\\uB97C \\uC0AC\\uC6A9\\uD558\\uBA74 \\uCF5C\\uBC31 \\uB300\\uC2E0 \\uB514\\uC2A4\\uD328\\uCE58\\uB97C \\uC804\\uB2EC\\uD560 \\uC218 \\uC788\\uC73C\\uBBC0\\uB85C \\uAE4A\\uC740 \\uC0C1\\uD0DC \\uAD6C\\uC870 \\uC5C5\\uB370\\uC774\\uD2B8\\uB97C \\uBC1C\\uC0DD\\uC2DC\\uD0A4\\uB294 \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uC758 \\uC131\\uB2A5\\uC744 \\uCD5C\\uC801\\uD654 \\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\uCC38\\uACE0\"), \" \\uC561\\uC158 / \\uB9AC\\uB4C0\\uC11C \\uD328\\uD134\\uC740 \\uB9AC\\uC2A4\\uD06C\\uB9BD\\uD2B8\\uC758 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rescript-in-korean/docs/manual/latest/record\"\n  }, \"\\uBD88\\uBCC0 \\uB808\\uCF54\\uB4DC\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rescript-in-korean/docs/manual/latest/variant\"\n  }, \"\\uBC30\\uB9AC\\uC5B8\\uD2B8\"), \" \\uADF8\\uB9AC\\uACE0 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rescript-in-korean/docs/manual/latest/pattern-matching-destructuring\"\n  }, \"\\uD328\\uD134 \\uB9E4\\uCE6D\"), \" \\uAE30\\uB2A5\\uC744 \\uC0AC\\uC6A9\\uD558\\uC5EC \\uC791\\uC5C5 \\uBC0F \\uC0C1\\uD0DC \\uBCC0\\uACBD\\uC744 \\uC27D\\uAC8C \\uD45C\\uD604\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"h2\", null, \"\\uC608\\uC81C\"), mdx(\"h3\", null, \"React.useReducer\\uB97C \\uC0AC\\uC6A9\\uD55C \\uCE74\\uC6B4\\uD130 \\uC608\\uC81C\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-reason\"\n  }, \"/* Counter.res */\\n\\ntype action = Inc | Dec\\ntype state = {count: int}\\n\\nlet reducer = (state, action) => {\\n  switch action {\\n  | Inc => {count: state.count + 1}\\n  | Dec => {count: state.count - 1}\\n  }\\n}\\n\\n@react.component\\nlet make = () => {\\n  let (state, dispatch) = React.useReducer(reducer, {count: 0})\\n\\n  <>\\n    {React.string(\\\"Count:\\\" ++ Belt.Int.toString(state.count))}\\n    <button onClick={(_) => dispatch(Dec)}> {React.string(\\\"-\\\")} </button>\\n    <button onClick={(_) => dispatch(Inc)}> {React.string(\\\"+\\\")} </button>\\n  </>\\n}\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uB9AC\\uC561\\uD2B8\\uB294 \\uB514\\uC2A4\\uD328\\uCE58 \\uD568\\uC218 ID(identity)\\uAC00 \\uC548\\uC815\\uC801\\uC774\\uBA70 \\uB2E4\\uC2DC \\uB80C\\uB354\\uB9C1\\uD560 \\uB54C \\uBCC0\\uACBD\\uB418\\uC9C0 \\uC54A\\uC74C\\uC744 \\uBCF4\\uC7A5\\uD569\\uB2C8\\uB2E4. \\uC774\\uAC83\\uC774 \\uB514\\uC2A4\\uD328\\uCE58(dispatch)\\uB97C useEffect \\uB610\\uB294 useCallback \\uC885\\uC18D\\uC131 \\uBAA9\\uB85D(Deps)\\uC5D0\\uC11C \\uC0DD\\uB7B5\\uD574\\uB3C4 \\uC548\\uC804\\uD55C \\uC774\\uC720\\uC785\\uB2C8\\uB2E4.\")), mdx(\"h3\", null, \"\\uB354 \\uBCF5\\uC7A1\\uD55C \\uC561\\uC158\\uC774 \\uD3EC\\uD568 \\uB41C Todo List \\uC571\"), mdx(\"p\", null, \"\\uC5EC\\uB7EC\\uBD84\\uC740 \\uBC30\\uB9AC\\uC5B8\\uD2B8\\uC758 \\uBAA8\\uB4E0 \\uAE30\\uB2A5(full power)\\uB97C \\uD65C\\uC6A9\\uD558\\uC5EC \\uC561\\uC158\\uACFC \\uB370\\uC774\\uD130 \\uD398\\uC774\\uB85C\\uB4DC\\uB97C \\uD45C\\uD604\\uD574 \\uC0C1\\uD0DC \\uC804\\uD658\\uC744 \\uB9E4\\uAC1C\\uBCC0\\uC218\\uD654 \\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-reason\"\n  }, \"/* TodoApp.res */\\n\\ntype todo = {\\n  id: int,\\n  content: string,\\n  completed: bool,\\n}\\n\\ntype action =\\n  | AddTodo(string)\\n  | RemoveTodo(int)\\n  | ToggleTodo(int)\\n\\ntype state = {\\n  todos: array<todo>,\\n  nextId: int,\\n}\\n\\nlet reducer = (state, action) =>\\n  switch action {\\n  | AddTodo(content) =>\\n    let todos = Js.Array2.concat(\\n      state.todos,\\n      [{id: state.nextId, content: content, completed: false}],\\n    )\\n    {todos: todos, nextId: state.nextId + 1}\\n  | RemoveTodo(id) =>\\n    let todos = Js.Array2.filter(state.todos, todo => todo.id !== id)\\n    {...state, todos: todos}\\n  | ToggleTodo(id) =>\\n    let todos = Belt.Array.map(state.todos, todo =>\\n      if todo.id === id {\\n        {\\n          ...todo,\\n          completed: !todo.completed,\\n        }\\n      } else {\\n        todo\\n      }\\n    )\\n    {...state, todos: todos}\\n  }\\n\\nlet initialTodos = [{id: 1, content: \\\"Try ReScript & React\\\", completed: false}]\\n\\n@react.component\\nlet make = () => {\\n  let (state, dispatch) = React.useReducer(\\n    reducer,\\n    {todos: initialTodos, nextId: 2},\\n  )\\n\\n  let todos = Belt.Array.map(state.todos, todo =>\\n    <li>\\n      {React.string(todo.content)}\\n      <button onClick={_ => dispatch(RemoveTodo(todo.id))}>\\n        {React.string(\\\"Remove\\\")}\\n      </button>\\n      <input\\n        type_=\\\"checkbox\\\"\\n        checked=todo.completed\\n        onChange={_ => dispatch(ToggleTodo(todo.id))}\\n      />\\n    </li>\\n  )\\n\\n  <> <h1> {React.string(\\\"Todo List:\\\")} </h1> <ul> {React.array(todos)} </ul> </>\\n}\\n\")), mdx(\"h2\", null, \"\\uC9C0\\uC5F0 \\uCD08\\uAE30\\uD654\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-reason\"\n  }, \"let (state, dispatch) =\\n  React.useReducerWithMapState(reducer, initialState, initial)\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"initialState\"), \" \\uCD08\\uAE30 \\uC0C1\\uD0DC\\uB97C \\uB2A6\\uAC8C \\uC0DD\\uC131\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uC774 \\uBC29\\uBC95\\uC744 \\uC0AC\\uC6A9\\uD558\\uB824\\uBA74 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"React.useReducerWithMapState\"), \" \\uD6C5\\uC744 \\uC0AC\\uC6A9\\uD558\\uACE0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"init\"), \" \\uD568\\uC218\\uB97C \\uC138 \\uBC88\\uC9F8 \\uC778\\uC218\\uB974 \\uC804\\uB2EC\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uCD08\\uAE30 \\uC0C1\\uD0DC\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"init(initialState)\"), \"\\uB85C \\uC124\\uC815\\uB429\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uC774 \\uD568\\uC218\\uB294 \\uB9AC\\uB4C0\\uC11C \\uC678\\uBD80\\uC758 \\uCD08\\uAE30 \\uC0C1\\uD0DC\\uB97C \\uB9CC\\uB4E4\\uAE30 \\uC704\\uD55C \\uB85C\\uC9C1\\uC744 \\uCD94\\uCD9C\\uD560 \\uC218 \\uC788\\uAC8C \\uD569\\uB2C8\\uB2E4. \\uB610\\uD55C \\uC561\\uC158\\uC5D0 \\uB300\\uD55C \\uC751\\uB2F5\\uC744 \\uAC00\\uC9C0\\uACE0 \\uB098\\uC911\\uC5D0 \\uC0C1\\uD0DC\\uB97C \\uC7AC\\uC124\\uC815\\uD558\\uB294 \\uB370\\uB3C4 \\uC88B\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-reason\"\n  }, \"/* Counter.res */\\n\\ntype action = Inc | Dec | Reset(int)\\ntype state = {count: int}\\n\\nlet init = initialCount => {\\n  {count: initialCount}\\n}\\n\\nlet reducer = (state, action) => {\\n  switch action {\\n  | Inc => {count: state.count + 1}\\n  | Dec => {count: state.count - 1}\\n  | Reset(count) => init(count)\\n  }\\n}\\n\\n@react.component\\nlet make = (~initialCount: int) => {\\n  let (state, dispatch) = React.useReducerWithMapState(\\n    reducer,\\n    initialCount,\\n    init,\\n  )\\n\\n  <>\\n    {React.string(\\\"Count:\\\" ++ Belt.Int.toString(state.count))}\\n    <button onClick={_ => dispatch(Dec)}> {React.string(\\\"-\\\")} </button>\\n    <button onClick={_ => dispatch(Inc)}> {React.string(\\\"+\\\")} </button>\\n  </>\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#사용법","title":"사용법"},{"url":"#예제","title":"예제","items":[{"url":"#reactusereducer를-사용한-카운터-예제","title":"React.useReducer를 사용한 카운터 예제"},{"url":"#더-복잡한-액션이-포함-된-todo-list-앱","title":"더 복잡한 액션이 포함 된 Todo List 앱"}]},{"url":"#지연-초기화","title":"지연 초기화"}]},"parent":{"relativePath":"ReScript-React/03-Hooks-and-State-Management/04-useReducer.mdx"},"frontmatter":{"metaTitle":"04-useReducer Hook","metaDescription":"리스크립트에서 useReducer 훅","sourceUrl":"https://rescript-lang.org/docs/react/latest/hooks-reducer","canonical":"https://rescript-lang.org/docs/react/latest/hooks-reducer"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/Build-System","title":"빌드 시스템"}}},{"node":{"fields":{"slug":"/Extra","title":"그 외"}}},{"node":{"fields":{"slug":"/JavaScript-Interop","title":"자바스크립트 인터롭"}}},{"node":{"fields":{"slug":"/Language-Features","title":"언어적인 특징"}}},{"node":{"fields":{"slug":"/Overview","title":"개요"}}},{"node":{"fields":{"slug":"/ReScript-React","title":"ReScript React"}}},{"node":{"fields":{"slug":"/","title":"ReScript in Korean"}}},{"node":{"fields":{"slug":"/Build-System/01-Overview","title":"개요"}}},{"node":{"fields":{"slug":"/Build-System/02-Configuration","title":"설정"}}},{"node":{"fields":{"slug":"/Build-System/03-Configuration-Schema","title":"설정 스키마"}}},{"node":{"fields":{"slug":"/Build-System/04-External-Stdlib","title":"External Stdlib"}}},{"node":{"fields":{"slug":"/Build-System/05-Build-Pinned-Dependencies","title":"고정 의존성"}}},{"node":{"fields":{"slug":"/Build-System/06-Interop-with-JS-Build-Systems","title":"자바스크립트 빌드시스템 인터롭"}}},{"node":{"fields":{"slug":"/Build-System/07-Performance","title":"성능"}}},{"node":{"fields":{"slug":"/Extra/01-Newcomer-Examples","title":"초보자를 위한 예제"}}},{"node":{"fields":{"slug":"/Extra/02-Project-Structure","title":"Project Structure"}}},{"node":{"fields":{"slug":"/Extra/03-FAQ","title":"자주 묻는 질문"}}},{"node":{"fields":{"slug":"/Guides/01-Converting-from-JS","title":"자바스크립트 파일을 변환하기"}}},{"node":{"fields":{"slug":"/Guides/02-Libraries","title":"Libraries"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/01-Embed-Raw-JavaScript","title":"Embed Raw JavaScript"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/05-Bind-to-JS-Function","title":"자바스크립트 함수에 바인딩하기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/06-Import-from-Export-to-JS","title":"Import from / Export to JS"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/07-Bind-to-Global-JS-Values","title":"Bind to Global JS Values"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/08-JSON","title":"JSON"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/09-Inlining-Constants","title":"변수 인라인하기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/10-Use-Illegal-Identifier-Names","title":"Use Illegal Identifier Names"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers","title":"인터롭 코드 자동 생성하기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/12-Browser-Support-Polyfills","title":"Browser Support & Polyfills"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/13-Interop-Cheatsheet","title":"Interop Cheatsheet"}}},{"node":{"fields":{"slug":"/Language-Features/01-Overview","title":"개요"}}},{"node":{"fields":{"slug":"/Language-Features/02-Let-Binding","title":"Let 바인딩"}}},{"node":{"fields":{"slug":"/Language-Features/03-Type","title":"타입"}}},{"node":{"fields":{"slug":"/Language-Features/04-Primitive-Types","title":"원시 타입"}}},{"node":{"fields":{"slug":"/Language-Features/05-Tuple","title":"튜플"}}},{"node":{"fields":{"slug":"/Language-Features/06-Record","title":"레코드"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/04-Bind-to-JS-Object","title":"자바스크립트 객체에 바인딩하기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/03-External-Bind-to-Any-JS-Library","title":"External (자바스크립트 라이브러리 바인딩)"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/02-Shared-Data-Types","title":"데이터 타입 공유"}}},{"node":{"fields":{"slug":"/Language-Features/07-Object","title":"객체"}}},{"node":{"fields":{"slug":"/Language-Features/08-Variant","title":"배리언트"}}},{"node":{"fields":{"slug":"/Language-Features/09-Polymorphic-Variant","title":"Polymorphic Variant"}}},{"node":{"fields":{"slug":"/Language-Features/10-Null-Undefined-and-Option","title":"Null, Undefined 그리고 Option"}}},{"node":{"fields":{"slug":"/Language-Features/11-Array-List","title":"배열과 리스트"}}},{"node":{"fields":{"slug":"/Language-Features/12-Function","title":"함수"}}},{"node":{"fields":{"slug":"/Language-Features/13-Control-Flow","title":"제어 흐름"}}},{"node":{"fields":{"slug":"/Language-Features/14-Pipe","title":"파이프"}}},{"node":{"fields":{"slug":"/Language-Features/15-Pattern-Matching-Destructuring","title":"패턴 매칭 / 구조분해"}}},{"node":{"fields":{"slug":"/Language-Features/16-Mutation","title":"가변"}}},{"node":{"fields":{"slug":"/Language-Features/17-JSX","title":"JSX"}}},{"node":{"fields":{"slug":"/Language-Features/18-Exception","title":"예외"}}},{"node":{"fields":{"slug":"/Language-Features/19-Lazy-Value","title":"Lazy Value"}}},{"node":{"fields":{"slug":"/Language-Features/20-Async-Promise","title":"Async & Promise"}}},{"node":{"fields":{"slug":"/Language-Features/21-Module","title":"모듈"}}},{"node":{"fields":{"slug":"/Language-Features/22-Import-Export","title":"Import & Export"}}},{"node":{"fields":{"slug":"/Language-Features/23-Attribute-Decorator","title":"속성 (데코레이터)"}}},{"node":{"fields":{"slug":"/Language-Features/24-Unboxed","title":"언박싱"}}},{"node":{"fields":{"slug":"/Language-Features/25-Reserved-Keyword","title":"예약된 키워드"}}},{"node":{"fields":{"slug":"/Overview/01-Introduction","title":"소개"}}},{"node":{"fields":{"slug":"/Overview/02-Installation","title":"설치"}}},{"node":{"fields":{"slug":"/Overview/03-EditorPlugins","title":"편집기 플러그인"}}},{"node":{"fields":{"slug":"/Overview/04-Migrate-to-ReScript-Syntax","title":"리스크립트 문법으로 변경하기"}}},{"node":{"fields":{"slug":"/Overview/05-Try","title":"CLI로 직접 해보기"}}},{"node":{"fields":{"slug":"/ReScript-React/01-Overview","title":"개요"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts","title":"메인 컨셉"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management","title":"리액트 훅과 상태 관리"}}},{"node":{"fields":{"slug":"/ReScript-React/04-Guides","title":"가이드"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers/01-@deriving(accessors)","title":"@deriving(accessor)"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers/02-@deriving(jsConverter)","title":"@deriving(jsConverter)"}}},{"node":{"fields":{"slug":"/Guides","title":"가이드"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers/03-@deriving(abstract)","title":"@deriving(abstract)"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers/04-@obj","title":"@obj"}}},{"node":{"fields":{"slug":"/ReScript-React/01-Overview/01-Introduction","title":"소개"}}},{"node":{"fields":{"slug":"/ReScript-React/01-Overview/02-Installation","title":"설치"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/01-Elements-and-JSX","title":"엘리먼트와 JSX"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/02-Rendering-Elements","title":"엘리먼트 렌더링하기"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/03-Components-and-Props","title":"컴포넌트와 Props"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/04-Arrays-and-Keys","title":"배열과 키"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/05-Refs-and-the-DOM","title":"Refs와 DOM"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/06-Context","title":"컨텍스트"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/08-Router","title":"라우터"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/01-Hooks-and-State-Management-Overview","title":"리액트 훅과 상태 관리 개요"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/02-useEffect","title":"useEffect"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/03-useState","title":"useState"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/04-useReducer","title":"useReducer"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/05-useContext","title":"useContext"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/06-useRef","title":"useRef"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/07-Build-A-Custom-Hook","title":"커스텀 훅 만들기"}}},{"node":{"fields":{"slug":"/ReScript-React/04-Guides/01-Beyond-JSX","title":"JSX를 넘어서"}}},{"node":{"fields":{"slug":"/ReScript-React/04-Guides/02-Forwarding-Refs","title":"Ref 포워딩하기"}}}]}},"pageContext":{"id":"7fc8d507-f8a1-5890-a048-3f5ac3c52800"}},"staticQueryHashes":["2619113677","3706406642","417421954"]}