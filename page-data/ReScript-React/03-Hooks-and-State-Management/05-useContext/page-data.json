{"componentChunkName":"component---src-templates-docs-js","path":"/ReScript-React/03-Hooks-and-State-Management/05-useContext","result":{"data":{"site":{"siteMetadata":{"title":"ReScript in Korean","docsLocation":"https://github.com/green-labs/rescript-in-korean/tree/main/content"}},"mdx":{"fields":{"id":"2a03ab87-c84f-556a-96d1-85e68505289f","title":"useContext","slug":"/ReScript-React/03-Hooks-and-State-Management/05-useContext"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"useContext\",\n  \"metaTitle\": \"05-useContext Hook\",\n  \"metaDescription\": \"리스크립트에서 useContext 리액트 훅에 대한 세부 사항\",\n  \"canonical\": \"https://rescript-lang.org/docs/react/latest/hooks-context\",\n  \"sourceUrl\": \"https://rescript-lang.org/docs/react/latest/hooks-context\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\uCEE8\\uD14D\\uC2A4\\uD2B8\\uB294 \\uBAA8\\uB4E0 \\uB808\\uBCA8\\uC5D0\\uC11C \\uC218\\uB3D9\\uC73C\\uB85C props\\uB97C \\uC804\\uB2EC \\uD560 \\uD544\\uC694\\uC5C6\\uC774 \\uCEF4\\uD3EC\\uB10C\\uD2B8 \\uD2B8\\uB9AC\\uB97C \\uD1B5\\uD574 \\uB370\\uC774\\uD130\\uB97C \\uC804\\uB2EC\\uD558\\uB294 \\uBC29\\uBC95\\uC744 \\uC81C\\uACF5\\uD569\\uB2C8\\uB2E4.\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useContext\"), \" \\uD6C5\\uC740 \\uADF8\\uB7EC\\uD55C \\uCEE8\\uD14D\\uC2A4\\uD2B8 \\uAC12\\uC5D0 \\uC811\\uADFC \\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\uCC38\\uACE0\"), \" \\uB9AC\\uC561\\uD2B8 \\uCEE8\\uD14D\\uC2A4\\uD2B8\\uC758 \\uBAA8\\uB4E0 \\uC138\\uBD80 \\uC0AC\\uD56D\\uACFC \\uC774\\uB860\\uC801 \\uADFC\\uAC70\\uB294 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"./context\"\n  }, \"\\uC5EC\\uAE30\"), \"\\uC5D0\\uC11C \\uCC3E\\uC744 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\")), mdx(\"h2\", null, \"\\uC0AC\\uC6A9\\uBC95\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-reason\"\n  }, \"let value = React.useContext(myContext)\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"React.Context.t\"), \" (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"React.createContext\"), \"\\uC5D0\\uC11C \\uBC18\\uD658 \\uB41C \\uAC12)\\uB97C \\uC218\\uB77D\\uD558\\uACE0 \\uD574\\uB2F9 \\uCEE8\\uD14D\\uC2A4\\uD2B8\\uC5D0 \\uB300\\uD55C \\uD604\\uC7AC \\uCEE8\\uD14D\\uC2A4\\uD2B8 \\uAC12\\uC744 \\uBC18\\uD658\\uD569\\uB2C8\\uB2E4.\\n\\uD604\\uC7AC \\uCEE8\\uD14D\\uC2A4\\uD2B8 \\uAC12\\uC740 \\uD2B8\\uB9AC\\uC758 \\uD638\\uCD9C \\uCEF4\\uD3EC\\uB10C\\uD2B8 \\uC704\\uC5D0 \\uC788\\uB294 \\uAC00\\uC7A5 \\uAC00\\uAE4C\\uC6B4 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<MyContext.Provider>\"), \"\\uC758 prop \\uAC12\\uC5D0 \\uC758\\uD574 \\uACB0\\uC815\\uB429\\uB2C8\\uB2E4.\"), mdx(\"h2\", null, \"\\uC608\\uC81C\"), mdx(\"h3\", null, \"\\uAC04\\uB2E8\\uD55C ThemeProvider\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-reason\"\n  }, \"/* App.re */\\nmodule ThemeContext = {\\n  let context = React.createContext(\\\"light\\\")\\n\\n  module Provider = {\\n    let provider = React.Context.provider(context)\\n\\n    @react.component\\n    let make = (~value, ~children) => {\\n      React.createElement(provider, {\\\"value\\\": value, \\\"children\\\": children})\\n    }\\n  }\\n}\\n\\nmodule ThemedButton = {\\n  @react.component\\n  let make = () => {\\n    let theme = React.useContext(ThemeContext.context)\\n    let (color, backgroundColor) = switch theme {\\n    | \\\"dark\\\" => (\\\"#ffffff\\\", \\\"#222222\\\")\\n    | \\\"light\\\" | _ => (\\\"#000000\\\", \\\"#eeeeee\\\")\\n    }\\n\\n    let style = ReactDOMStyle.make(~color, ~backgroundColor, ())\\n\\n    <button style> {React.string(\\\"I am a styled button!\\\")} </button>\\n  }\\n}\\n\\nmodule Toolbar = {\\n  @react.component\\n  let make = () => {\\n    <div> <ThemedButton /> </div>\\n  }\\n}\\n\\n@react.component\\nlet make = () => {\\n  <ThemeContext.Provider value=\\\"dark\\\">\\n    <div> <Toolbar /> </div>\\n  </ThemeContext.Provider>\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#사용법","title":"사용법"},{"url":"#예제","title":"예제","items":[{"url":"#간단한-themeprovider","title":"간단한 ThemeProvider"}]}]},"parent":{"relativePath":"ReScript-React/03-Hooks-and-State-Management/05-useContext.mdx"},"frontmatter":{"metaTitle":"05-useContext Hook","metaDescription":"리스크립트에서 useContext 리액트 훅에 대한 세부 사항","sourceUrl":"https://rescript-lang.org/docs/react/latest/hooks-context","canonical":"https://rescript-lang.org/docs/react/latest/hooks-context"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/Build-System","title":"빌드 시스템"}}},{"node":{"fields":{"slug":"/Guides","title":"가이드"}}},{"node":{"fields":{"slug":"/Extra","title":"그 외"}}},{"node":{"fields":{"slug":"/JavaScript-Interop","title":"자바스크립트 인터롭"}}},{"node":{"fields":{"slug":"/Language-Features","title":"언어적인 특징"}}},{"node":{"fields":{"slug":"/Overview","title":"개요"}}},{"node":{"fields":{"slug":"/ReScript-React","title":"ReScript React"}}},{"node":{"fields":{"slug":"/","title":"ReScript in Korean"}}},{"node":{"fields":{"slug":"/Build-System/01-Overview","title":"개요"}}},{"node":{"fields":{"slug":"/Build-System/02-Configuration","title":"설정"}}},{"node":{"fields":{"slug":"/Build-System/03-Configuration-Schema","title":"설정 스키마"}}},{"node":{"fields":{"slug":"/Build-System/04-External-Stdlib","title":"External Stdlib"}}},{"node":{"fields":{"slug":"/Build-System/05-Build-Pinned-Dependencies","title":"고정 의존성"}}},{"node":{"fields":{"slug":"/Build-System/06-Interop-with-JS-Build-Systems","title":"자바스크립트 빌드시스템 인터롭"}}},{"node":{"fields":{"slug":"/Build-System/07-Performance","title":"성능"}}},{"node":{"fields":{"slug":"/Extra/01-Newcomer-Examples","title":"초보자를 위한 예제"}}},{"node":{"fields":{"slug":"/Extra/02-Project-Structure","title":"Project Structure"}}},{"node":{"fields":{"slug":"/Extra/03-FAQ","title":"자주 묻는 질문"}}},{"node":{"fields":{"slug":"/Guides/01-Converting-from-JS","title":"자바스크립트 파일을 변환하기"}}},{"node":{"fields":{"slug":"/Guides/02-Libraries","title":"Libraries"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/01-Embed-Raw-JavaScript","title":"Embed Raw JavaScript"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/05-Bind-to-JS-Function","title":"자바스크립트 함수에 바인딩하기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/06-Import-from-Export-to-JS","title":"Import from / Export to JS"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/07-Bind-to-Global-JS-Values","title":"Bind to Global JS Values"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/08-JSON","title":"JSON"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/09-Inlining-Constants","title":"변수 인라인하기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/10-Use-Illegal-Identifier-Names","title":"Use Illegal Identifier Names"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers","title":"인터롭 코드 자동 생성하기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/12-Browser-Support-Polyfills","title":"Browser Support & Polyfills"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/13-Interop-Cheatsheet","title":"Interop Cheatsheet"}}},{"node":{"fields":{"slug":"/Language-Features/01-Overview","title":"개요"}}},{"node":{"fields":{"slug":"/Language-Features/02-Let-Binding","title":"Let 바인딩"}}},{"node":{"fields":{"slug":"/Language-Features/03-Type","title":"타입"}}},{"node":{"fields":{"slug":"/Language-Features/04-Primitive-Types","title":"원시 타입"}}},{"node":{"fields":{"slug":"/Language-Features/05-Tuple","title":"튜플"}}},{"node":{"fields":{"slug":"/Language-Features/06-Record","title":"레코드"}}},{"node":{"fields":{"slug":"/Language-Features/07-Object","title":"객체"}}},{"node":{"fields":{"slug":"/Language-Features/08-Variant","title":"배리언트"}}},{"node":{"fields":{"slug":"/Language-Features/09-Polymorphic-Variant","title":"Polymorphic Variant"}}},{"node":{"fields":{"slug":"/Language-Features/10-Null-Undefined-and-Option","title":"Null, Undefined 그리고 Option"}}},{"node":{"fields":{"slug":"/Language-Features/11-Array-List","title":"배열과 리스트"}}},{"node":{"fields":{"slug":"/Language-Features/12-Function","title":"함수"}}},{"node":{"fields":{"slug":"/Language-Features/13-Control-Flow","title":"제어 흐름"}}},{"node":{"fields":{"slug":"/Language-Features/14-Pipe","title":"파이프"}}},{"node":{"fields":{"slug":"/Language-Features/15-Pattern-Matching-Destructuring","title":"패턴 매칭 / 구조분해"}}},{"node":{"fields":{"slug":"/Language-Features/16-Mutation","title":"가변"}}},{"node":{"fields":{"slug":"/Language-Features/17-JSX","title":"JSX"}}},{"node":{"fields":{"slug":"/Language-Features/18-Exception","title":"예외"}}},{"node":{"fields":{"slug":"/Language-Features/19-Lazy-Value","title":"Lazy Value"}}},{"node":{"fields":{"slug":"/Language-Features/20-Async-Promise","title":"Async & Promise"}}},{"node":{"fields":{"slug":"/Language-Features/21-Module","title":"모듈"}}},{"node":{"fields":{"slug":"/Language-Features/22-Import-Export","title":"Import & Export"}}},{"node":{"fields":{"slug":"/Language-Features/23-Attribute-Decorator","title":"속성 (데코레이터)"}}},{"node":{"fields":{"slug":"/Language-Features/24-Unboxed","title":"언박싱"}}},{"node":{"fields":{"slug":"/Language-Features/25-Reserved-Keyword","title":"예약된 키워드"}}},{"node":{"fields":{"slug":"/Overview/01-Introduction","title":"소개"}}},{"node":{"fields":{"slug":"/Overview/02-Installation","title":"설치"}}},{"node":{"fields":{"slug":"/Overview/03-EditorPlugins","title":"편집기 플러그인"}}},{"node":{"fields":{"slug":"/Overview/04-Migrate-to-ReScript-Syntax","title":"리스크립트 문법으로 변경하기"}}},{"node":{"fields":{"slug":"/Overview/05-Try","title":"CLI로 직접 해보기"}}},{"node":{"fields":{"slug":"/ReScript-React/01-Overview","title":"개요"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts","title":"메인 컨셉"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management","title":"리액트 훅과 상태 관리"}}},{"node":{"fields":{"slug":"/ReScript-React/04-Guides","title":"가이드"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers/01-@deriving(accessors)","title":"@deriving(accessor)"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers/02-@deriving(jsConverter)","title":"@deriving(jsConverter)"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers/03-@deriving(abstract)","title":"@deriving(abstract)"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers/04-@obj","title":"@obj"}}},{"node":{"fields":{"slug":"/ReScript-React/01-Overview/01-Introduction","title":"소개"}}},{"node":{"fields":{"slug":"/ReScript-React/01-Overview/02-Installation","title":"설치"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/01-Elements-and-JSX","title":"엘리먼트와 JSX"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/02-Rendering-Elements","title":"엘리먼트 렌더링하기"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/03-Components-and-Props","title":"컴포넌트와 Props"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/04-Arrays-and-Keys","title":"배열과 키"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/05-Refs-and-the-DOM","title":"Refs와 DOM"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/06-Context","title":"컨텍스트"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/08-Router","title":"라우터"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/01-Hooks-and-State-Management-Overview","title":"리액트 훅과 상태 관리 개요"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/02-useEffect","title":"useEffect"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/03-useState","title":"useState"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/04-useReducer","title":"useReducer"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/05-useContext","title":"useContext"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/06-useRef","title":"useRef"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/07-Build-A-Custom-Hook","title":"커스텀 훅 만들기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/04-Bind-to-JS-Object","title":"자바스크립트 객체에 바인딩하기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/03-External-Bind-to-Any-JS-Library","title":"External (자바스크립트 라이브러리 바인딩)"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/02-Shared-Data-Types","title":"데이터 타입 공유"}}},{"node":{"fields":{"slug":"/ReScript-React/04-Guides/01-Beyond-JSX","title":"JSX를 넘어서"}}},{"node":{"fields":{"slug":"/ReScript-React/04-Guides/02-Forwarding-Refs","title":"Ref 포워딩하기"}}}]}},"pageContext":{"id":"2a03ab87-c84f-556a-96d1-85e68505289f"}},"staticQueryHashes":["2619113677","3706406642","417421954"]}