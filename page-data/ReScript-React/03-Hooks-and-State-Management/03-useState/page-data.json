{"componentChunkName":"component---src-templates-docs-js","path":"/ReScript-React/03-Hooks-and-State-Management/03-useState","result":{"data":{"site":{"siteMetadata":{"title":"ReScript in Korean","docsLocation":"https://github.com/green-labs/rescript-in-korean/tree/main/content"}},"mdx":{"fields":{"id":"2317be9c-9f23-57a0-bb6e-1e9c0f4e85a0","title":"useState","slug":"/ReScript-React/03-Hooks-and-State-Management/03-useState"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"useState\",\n  \"metaTitle\": \"03-useState Hook\",\n  \"metaDescription\": \"리스크립트에서 useState 리액트 훅에 대해\",\n  \"canonical\": \"https://rescript-lang.org/docs/react/latest/hooks-state\",\n  \"sourceUrl\": \"https://rescript-lang.org/docs/react/latest/hooks-state\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"React.useState\"), \"\\uB294 \\uC0C1\\uD0DC\\uB97C \\uAC00\\uC9C4 \\uAC12\\uACFC \\uADF8\\uAC83\\uC744 \\uC5C5\\uB370\\uC774\\uD2B8\\uD558\\uB294 \\uD568\\uC218\\uB97C \\uBC18\\uD658\\uD569\\uB2C8\\uB2E4.\"), mdx(\"h2\", null, \"\\uC6A9\\uBC95\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-reason\"\n  }, \"let (state, setState) = React.useState(_ => initialState)\\n\")), mdx(\"p\", null, \"\\uB80C\\uB354\\uB9C1\\uC774 \\uC774\\uB904\\uC9C0\\uB294 \\uB3D9\\uC548 \\uB9AC\\uD134\\uB418\\uB294 \\uC0C1\\uD0DC\\uC778 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"state\"), \"\\uB294 \\uCCAB\\uBC88\\uC9F8 \\uC778\\uC790\\uB85C \\uC804\\uB2EC\\uB41C \\uAC12\\uACFC \\uAC19\\uC2B5\\uB2C8\\uB2E4. (initialState)\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setState\"), \" \\uD568\\uC218\\uB294 \\uB2E4\\uB978 \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB85C \\uC8FC\\uC785\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uC774\\uAC74 \\uC790\\uC2DD \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uAC00 \\uBD80\\uBAA8 \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uC758 \\uC0C1\\uD0DC\\uB97C \\uC124\\uC815\\uD560 \\uC218 \\uC788\\uB294 \\uC720\\uC6A9\\uD55C \\uBC29\\uBC95\\uC785\\uB2C8\\uB2E4.\"), mdx(\"h2\", null, \"\\uC608\\uC81C\"), mdx(\"h3\", null, \"\\uD14D\\uC2A4\\uD2B8 Input\\uC5D0 useState \\uC0AC\\uC6A9\\uD558\\uAE30\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-reason\"\n  }, \"@react.component\\nlet make = () => {\\n  let (text, setText) = React.useState(_ => \\\"\\\");\\n\\n  let onChange = evt => {\\n    ReactEvent.Form.preventDefault(evt)\\n    let value = ReactEvent.Form.target(evt)[\\\"value\\\"]\\n    setText(_prev => value);\\n  }\\n\\n  <div>\\n    <input onChange value=text />\\n  </div>\\n};\\n\")), mdx(\"h3\", null, \"\\uC790\\uC2DD \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB85C setState \\uB118\\uACA8\\uC8FC\\uAE30\"), mdx(\"p\", null, \"\\uC774 \\uC608\\uC2DC\\uC5D0\\uC11C \\uC6B0\\uB9AC\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"darkmode\"), \"\\uB77C\\uB294 boolean \\uC0C1\\uD0DC\\uB97C \\uAD00\\uB9AC\\uD558\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ThemeContainer\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setDarkmode\"), \" \\uD568\\uC218\\uB97C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ControlPanel\"), \" \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uC5D0\\uC11C \\uC0C1\\uD0DC\\uB97C \\uBC14\\uAFC0 \\uC218 \\uC788\\uB3C4\\uB85D \\uB0B4\\uB824\\uC904\\uAC83\\uC785\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-reason\"\n  }, \"/* ThemeContainer.res */\\nmodule ControlPanel = {\\n  @react.component\\n  let make = (~setDarkmode, ~darkmode) => {\\n    let onClick = evt => {\\n      ReactEvent.Mouse.preventDefault(evt)\\n      setDarkmode(prev => !prev)\\n    }\\n\\n    let toggleText = \\\"Switch to \\\" ++ ((darkmode ? \\\"light\\\" : \\\"dark\\\") ++ \\\" theme\\\")\\n\\n    <div> <button onClick> {React.string(toggleText)} </button> </div>\\n  }\\n}\\n\\n@react.component\\nlet make = (~content) => {\\n  let (darkmode, setDarkmode) = React.useState(_ => false)\\n\\n  let className = darkmode ? \\\"theme-dark\\\" : \\\"theme-light\\\"\\n\\n  <div className>\\n    <section>\\n      <h1> {React.string(\\\"More Infos about ReScript\\\")} </h1> content\\n    </section>\\n    <ControlPanel darkmode setDarkmode />\\n  </div>\\n}\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setDarkmode\"), \" \\uD568\\uC218\\uAC00 \\uC0C8 \\uAC12\\uC744 \\uBC18\\uD658\\uD560 \\uB54C\\uB9C8\\uB2E4 (Ex \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \" -> \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"false\"), \"), \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ThemeContainer\"), \"\\uC758 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"className\"), \" \\uBC0F \\uC911\\uCCA9\\uB41C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ControlPanel\"), \" \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uC758 toggleText\\uB97C \\uB2E4\\uC2DC \\uB80C\\uB354\\uB9C1\\uD569\\uB2C8\\uB2E4.\"), mdx(\"h2\", null, \"\\uC5B8\\uCEE4\\uB9AC\\uB4DC \\uBC84\\uC804\"), mdx(\"p\", null, \"\\uC880 \\uB354 \\uAE54\\uB054\\uD55C JS \\uCD9C\\uB825\\uC744 \\uC704\\uD574 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"React.Uncurried.useState\"), \" \\uC5B8\\uCEE4\\uB9AC\\uB4DC \\uBC84\\uC804\\uC744 \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-reason\"\n  }, \"let (state, setState) = React.Uncurried.useState(_ => 0)\\n\\nsetState(. prev => prev + 1)\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#용법","title":"용법"},{"url":"#예제","title":"예제","items":[{"url":"#텍스트-input에-usestate-사용하기","title":"텍스트 Input에 useState 사용하기"},{"url":"#자식-컴포넌트로-setstate-넘겨주기","title":"자식 컴포넌트로 setState 넘겨주기"}]},{"url":"#언커리드-버전","title":"언커리드 버전"}]},"parent":{"relativePath":"ReScript-React/03-Hooks-and-State-Management/03-useState.mdx"},"frontmatter":{"metaTitle":"03-useState Hook","metaDescription":"리스크립트에서 useState 리액트 훅에 대해","sourceUrl":"https://rescript-lang.org/docs/react/latest/hooks-state","canonical":"https://rescript-lang.org/docs/react/latest/hooks-state"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/Build-System","title":"빌드 시스템"}}},{"node":{"fields":{"slug":"/Extra","title":"그 외"}}},{"node":{"fields":{"slug":"/JavaScript-Interop","title":"자바스크립트 인터롭"}}},{"node":{"fields":{"slug":"/Language-Features","title":"언어적인 특징"}}},{"node":{"fields":{"slug":"/Overview","title":"개요"}}},{"node":{"fields":{"slug":"/ReScript-React","title":"ReScript React"}}},{"node":{"fields":{"slug":"/","title":"ReScript in Korean"}}},{"node":{"fields":{"slug":"/Build-System/01-Overview","title":"개요"}}},{"node":{"fields":{"slug":"/Build-System/02-Configuration","title":"설정"}}},{"node":{"fields":{"slug":"/Build-System/03-Configuration-Schema","title":"설정 스키마"}}},{"node":{"fields":{"slug":"/Build-System/04-External-Stdlib","title":"External Stdlib"}}},{"node":{"fields":{"slug":"/Build-System/05-Build-Pinned-Dependencies","title":"고정 의존성"}}},{"node":{"fields":{"slug":"/Build-System/06-Interop-with-JS-Build-Systems","title":"자바스크립트 빌드시스템 인터롭"}}},{"node":{"fields":{"slug":"/Build-System/07-Performance","title":"성능"}}},{"node":{"fields":{"slug":"/Extra/01-Newcomer-Examples","title":"초보자를 위한 예제"}}},{"node":{"fields":{"slug":"/Extra/02-Project-Structure","title":"Project Structure"}}},{"node":{"fields":{"slug":"/Extra/03-FAQ","title":"자주 묻는 질문"}}},{"node":{"fields":{"slug":"/Guides/01-Converting-from-JS","title":"자바스크립트 파일을 변환하기"}}},{"node":{"fields":{"slug":"/Guides/02-Libraries","title":"Libraries"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/01-Embed-Raw-JavaScript","title":"Embed Raw JavaScript"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/05-Bind-to-JS-Function","title":"자바스크립트 함수에 바인딩하기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/06-Import-from-Export-to-JS","title":"Import from / Export to JS"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/07-Bind-to-Global-JS-Values","title":"Bind to Global JS Values"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/08-JSON","title":"JSON"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/09-Inlining-Constants","title":"변수 인라인하기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/10-Use-Illegal-Identifier-Names","title":"Use Illegal Identifier Names"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers","title":"인터롭 코드 자동 생성하기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/12-Browser-Support-Polyfills","title":"Browser Support & Polyfills"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/13-Interop-Cheatsheet","title":"Interop Cheatsheet"}}},{"node":{"fields":{"slug":"/Language-Features/01-Overview","title":"개요"}}},{"node":{"fields":{"slug":"/Language-Features/02-Let-Binding","title":"Let 바인딩"}}},{"node":{"fields":{"slug":"/Language-Features/03-Type","title":"타입"}}},{"node":{"fields":{"slug":"/Language-Features/04-Primitive-Types","title":"원시 타입"}}},{"node":{"fields":{"slug":"/Language-Features/05-Tuple","title":"튜플"}}},{"node":{"fields":{"slug":"/Language-Features/06-Record","title":"레코드"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/04-Bind-to-JS-Object","title":"자바스크립트 객체에 바인딩하기"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/03-External-Bind-to-Any-JS-Library","title":"External (자바스크립트 라이브러리 바인딩)"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/02-Shared-Data-Types","title":"데이터 타입 공유"}}},{"node":{"fields":{"slug":"/Language-Features/07-Object","title":"객체"}}},{"node":{"fields":{"slug":"/Language-Features/08-Variant","title":"배리언트"}}},{"node":{"fields":{"slug":"/Language-Features/09-Polymorphic-Variant","title":"Polymorphic Variant"}}},{"node":{"fields":{"slug":"/Language-Features/10-Null-Undefined-and-Option","title":"Null, Undefined 그리고 Option"}}},{"node":{"fields":{"slug":"/Language-Features/11-Array-List","title":"배열과 리스트"}}},{"node":{"fields":{"slug":"/Language-Features/12-Function","title":"함수"}}},{"node":{"fields":{"slug":"/Language-Features/13-Control-Flow","title":"제어 흐름"}}},{"node":{"fields":{"slug":"/Language-Features/14-Pipe","title":"파이프"}}},{"node":{"fields":{"slug":"/Language-Features/15-Pattern-Matching-Destructuring","title":"패턴 매칭 / 구조분해"}}},{"node":{"fields":{"slug":"/Language-Features/16-Mutation","title":"가변"}}},{"node":{"fields":{"slug":"/Language-Features/17-JSX","title":"JSX"}}},{"node":{"fields":{"slug":"/Language-Features/18-Exception","title":"예외"}}},{"node":{"fields":{"slug":"/Language-Features/19-Lazy-Value","title":"Lazy Value"}}},{"node":{"fields":{"slug":"/Language-Features/20-Async-Promise","title":"Async & Promise"}}},{"node":{"fields":{"slug":"/Language-Features/21-Module","title":"모듈"}}},{"node":{"fields":{"slug":"/Language-Features/22-Import-Export","title":"Import & Export"}}},{"node":{"fields":{"slug":"/Language-Features/23-Attribute-Decorator","title":"속성 (데코레이터)"}}},{"node":{"fields":{"slug":"/Language-Features/24-Unboxed","title":"언박싱"}}},{"node":{"fields":{"slug":"/Language-Features/25-Reserved-Keyword","title":"예약된 키워드"}}},{"node":{"fields":{"slug":"/Overview/01-Introduction","title":"소개"}}},{"node":{"fields":{"slug":"/Overview/02-Installation","title":"설치"}}},{"node":{"fields":{"slug":"/Overview/03-EditorPlugins","title":"편집기 플러그인"}}},{"node":{"fields":{"slug":"/Overview/04-Migrate-to-ReScript-Syntax","title":"리스크립트 문법으로 변경하기"}}},{"node":{"fields":{"slug":"/Overview/05-Try","title":"CLI로 직접 해보기"}}},{"node":{"fields":{"slug":"/ReScript-React/01-Overview","title":"개요"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts","title":"메인 컨셉"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management","title":"리액트 훅과 상태 관리"}}},{"node":{"fields":{"slug":"/ReScript-React/04-Guides","title":"가이드"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers/01-@deriving(accessors)","title":"@deriving(accessor)"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers/02-@deriving(jsConverter)","title":"@deriving(jsConverter)"}}},{"node":{"fields":{"slug":"/Guides","title":"가이드"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers/03-@deriving(abstract)","title":"@deriving(abstract)"}}},{"node":{"fields":{"slug":"/JavaScript-Interop/11-Generate-Converters-Helpers/04-@obj","title":"@obj"}}},{"node":{"fields":{"slug":"/ReScript-React/01-Overview/01-Introduction","title":"소개"}}},{"node":{"fields":{"slug":"/ReScript-React/01-Overview/02-Installation","title":"설치"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/01-Elements-and-JSX","title":"엘리먼트와 JSX"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/02-Rendering-Elements","title":"엘리먼트 렌더링하기"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/03-Components-and-Props","title":"컴포넌트와 Props"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/04-Arrays-and-Keys","title":"배열과 키"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/05-Refs-and-the-DOM","title":"Refs와 DOM"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/06-Context","title":"컨텍스트"}}},{"node":{"fields":{"slug":"/ReScript-React/02-Main-Concepts/08-Router","title":"라우터"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/01-Hooks-and-State-Management-Overview","title":"리액트 훅과 상태 관리 개요"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/02-useEffect","title":"useEffect"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/03-useState","title":"useState"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/04-useReducer","title":"useReducer"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/05-useContext","title":"useContext"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/06-useRef","title":"useRef"}}},{"node":{"fields":{"slug":"/ReScript-React/03-Hooks-and-State-Management/07-Build-A-Custom-Hook","title":"커스텀 훅 만들기"}}},{"node":{"fields":{"slug":"/ReScript-React/04-Guides/01-Beyond-JSX","title":"JSX를 넘어서"}}},{"node":{"fields":{"slug":"/ReScript-React/04-Guides/02-Forwarding-Refs","title":"Ref 포워딩하기"}}}]}},"pageContext":{"id":"2317be9c-9f23-57a0-bb6e-1e9c0f4e85a0"}},"staticQueryHashes":["2619113677","3706406642","417421954"]}